// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// call_sr
List call_sr(CharacterVector from, CharacterVector to, NumericVector cost, CharacterVector node_names, NumericVector node_prizes);
RcppExport SEXP _XiaLabCppLib_call_sr(SEXP fromSEXP, SEXP toSEXP, SEXP costSEXP, SEXP node_namesSEXP, SEXP node_prizesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type from(fromSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type to(toSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cost(costSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type node_names(node_namesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type node_prizes(node_prizesSEXP);
    rcpp_result_gen = Rcpp::wrap(call_sr(from, to, cost, node_names, node_prizes));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP rowcolttests(SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_XiaLabCppLib_call_sr", (DL_FUNC) &_XiaLabCppLib_call_sr, 5},
    {"rowcolttests", (DL_FUNC) &rowcolttests, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_XiaLabCppLib(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
